1746 [080503a1] __libc_start_main(0x08060400, 1, 0xbffff9bc, 0x0804fa3c, 0x0808a51c <unfinished ...>
1746 [08050461] __register_frame_info(0x0809ad80, 0x0809b1a4, 0xbffff958, 0x080503ae, 0x0804fa3c) = 0x4004dad0
1746 [080508b3] malloc(8208)                      = 0x0809dbc0
1746 [080508b3] malloc(8208)                      = 0x0809fbd8
1746 [080508b3] malloc(8208)                      = 0x080a1bf0
1746 [080508b3] malloc(8208)                      = 0x080a3c08
1746 [080508b3] malloc(8208)                      = 0x080a5c20
1746 [0805104f] memset(0x080a5c70, '\000', 4)     = 0x080a5c70
1746 [0805104f] memset(0x080a5c90, '\000', 4)     = 0x080a5c90
1746 [0805104f] memset(0x080a5cb0, '\000', 4)     = 0x080a5cb0
1746 [080716ad] malloc(2052)                      = 0x080a7c38
1746 [080717b9] malloc(24)                        = 0x080a8440
1746 [080717d9] __strdup(0x0808f335, 2056, 0x40221f00, 0x0807175e, 0x40221f00) = 0x080a8460
1746 [080717fc] malloc(516)                       = 0x080a8478
1746 [08071792] strcmp("ap::buff::read", "ap::buff::write") = -1
1746 [080717b9] malloc(24)                        = 0x080a8680
1746 [080717d9] __strdup(0x0808f344, 0x0808f344, 0x40221f00, 0x0807175e, 0x40221f00) = 0x080a86a0
1746 [080717fc] malloc(516)                       = 0x080a86b8
1746 [08071792] strcmp("ap::buff::read", "ap::buff::writev") = -1
1746 [08071792] strcmp("ap::buff::write", "ap::buff::writev") = -1
1746 [080717b9] malloc(24)                        = 0x080a88c0
1746 [080717d9] __strdup(0x0808f354, 0x0808f354, 0x40221f00, 0x0807175e, 0x40221f00) = 0x080a88e0
1746 [080717fc] malloc(516)                       = 0x080a88f8
1746 [08071792] strcmp("ap::buff::read", "ap::buff::sendwithtimeout") = -1
1746 [08071792] strcmp("ap::buff::write", "ap::buff::sendwithtimeout") = 1
1746 [08071792] strcmp("ap::buff::writev", "ap::buff::sendwithtimeout") = 1
1746 [080717b9] malloc(24)                        = 0x080a8b00
1746 [080717d9] __strdup(0x0808f365, 0x0808f365, 0x40221f00, 0x0807175e, 0x40221f00) = 0x080a8b20
1746 [080717fc] malloc(516)                       = 0x080a8b40
1746 [08071792] strcmp("ap::buff::read", "ap::buff::recvwithtimeout") = -1
1746 [08071792] strcmp("ap::buff::write", "ap::buff::recvwithtimeout") = 1
1746 [08071792] strcmp("ap::buff::writev", "ap::buff::recvwithtimeout") = 1
1746 [08071792] strcmp("ap::buff::sendwithtimeout", "ap::buff::recvwithtimeout") = 1
1746 [080717b9] malloc(24)                        = 0x080a8d48
1746 [080717d9] __strdup(0x0808f37f, 0x0808f37f, 0x40221f00, 0x0807175e, 0x40221f00) = 0x080a8d68
1746 [080717fc] malloc(516)                       = 0x080a8d88
1746 [080724ca] malloc(8)                         = 0x080a8f90
1746 [080724de] malloc(4100)                      = 0x080a8fa0
1746 [08060429] strrchr("/usr/sbin/httpd", '/')   = "/httpd"
1746 [080552a5] malloc(268)                       = 0x080a9fa8
1746 [0805502e] strrchr("http_core.c", '/')       = NULL
1746 [08055058] strrchr("http_core.c", '\\')      = NULL
1746 [0805502e] strrchr("mod_so.c", '/')          = NULL
1746 [08055058] strrchr("mod_so.c", '\\')         = NULL
1746 [08060770] getopt(1, 0xbffff9bc, "D:C:c:xXd:f:vVlLR:StTh") = -1
1746 [08089d49] sysconf(30, 4104, 0x40221f00, 0x402239e4, 512) = 4096
1746 [08050bfb] getpid()                          = 1746
1746 [08070a0a] strlen(0x0808a7e8, 49, 0, 0x080700e1, 0) = 17
1746 [08089e5b] sprintf("/var/run/httpd.mm.1746.sem", "%s.sem", "/var/run/httpd.mm.1746") = 26
1746 [08089e71] shmget(0, 0x00102000, 896, 0x08089e29, 0) = 0x02578003
1747 [08089e95] shmat(0x02570002, 0, 0, 0x08089e29, 0) = 0x40229000
1747 [08089ebf] shmctl(0x02570002, 2, 0xbffff800, 0x08089e29, 0) = 0
1747 [08089ed7] getuid()                          = 500
1747 [08089edf] getgid()                          = 500
1747 [08089eee] shmctl(0x02570002, 1, 0xbffff800, 0x08089edf, 0) = 0
1747 [08089f0d] shmctl(0x02570002, 0, 0, 0x08089edf, 0) = 0
1747 [08089f2f] unlink("/var/run/httpd.mm.1747.sem") = -1
1747 [08089f45] open("/var/run/httpd.mm.1747.sem", 66, 0600) = -1
1747 [0808a28c] memcpy(0x0809a960, "mm:core: ", 10) = 0x0809a960
1747 [0808a2ce] strlen(0x08093e0a, 0x08093e6b, 10, 0x40229000, 0xbffff878) = 29
1747 [0808a2f6] memcpy(0x0809a969, "failed to open semaphore file", 30) = 0x0809a969
1747 [0808a308] __errno_location()                = 0x40224600
1747 [0808a33d] strerror(13)                      = "Permission denied"
1747 [0808a348] strlen(0x40219750, 13, 0xbfffd7d8, 0x0808a33d, 13) = 17
1747 [0808a370] memcpy(0x0809a988, "Permission denied", 18) = 0x0809a988
1747 [08089fb5] shmdt(0x40229000, 0x08093e0a, 384, 0x08089edf, 0) = 0
1747 [08089fca] shmctl(0x02570002, 0, 0, 0x08089edf, 0) = -1
1747 [08089ff7] unlink("/var/run/httpd.mm.1747.sem") = -1
1747 [08050c59] fprintf(0x40221be0, "Ouch! ap_mm_create(%d, "%s") fai"..., 1048576, "/var/run/httpd.mm.1747") = 61
1747 [08050c75] __errno_location()                = 0x40224600
1747 [08050c7e] strerror(2)                       = "No such file or directory"
1747 [08050c9c] fprintf(0x40221be0, "Error: MM: %s: OS: %s\n", "mm:core: failed to open semaphor"..., "No such file or directory") = 101
1747 [08050ca8] exit(1)                           = <void>
1747 [0805041c] __deregister_frame_info(0x0809ad80, 0x4000d816, 0x40016d64, 0x40017ae0, 7) = 0x0809b1a4
1747 [ffffffff] +++ exited (status 1) +++
